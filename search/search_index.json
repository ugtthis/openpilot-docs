{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"car-porting/brand-port/","text":"Developing a car brand port A brand port is a port of openpilot to a substantially new car brand or platform within a brand. Here's an example of one: https://github.com/commaai/openpilot/pull/23331.","title":"Porting a car brand"},{"location":"car-porting/brand-port/#developing-a-car-brand-port","text":"A brand port is a port of openpilot to a substantially new car brand or platform within a brand. Here's an example of one: https://github.com/commaai/openpilot/pull/23331.","title":"Developing a car brand port"},{"location":"car-porting/model-port/","text":"Developing a car model port A model port is a port of openpilot to a new car model within an already supported brand. Model ports are easier than brand ports because the car's existing APIs are already known. Here's an example of one: https://github.com/commaai/openpilot/pull/30672/.","title":"Porting a car model"},{"location":"car-porting/model-port/#developing-a-car-model-port","text":"A model port is a port of openpilot to a new car model within an already supported brand. Model ports are easier than brand ports because the car's existing APIs are already known. Here's an example of one: https://github.com/commaai/openpilot/pull/30672/.","title":"Developing a car model port"},{"location":"car-porting/what-is-a-car-port/","text":"What is a car port? All car ports live in openpilot/selfdrive/car/ . interface.py: Interface for the car, defines the CarInterface class carstate.py: Reads CAN from car and builds openpilot CarState message carcontroller.py: Builds CAN messages to send to car values.py: Limits for actuation, general constants for cars, and supported car documentation radar_interface.py: Interface for parsing radar points from the car","title":"What is a car port?"},{"location":"car-porting/what-is-a-car-port/#what-is-a-car-port","text":"All car ports live in openpilot/selfdrive/car/ . interface.py: Interface for the car, defines the CarInterface class carstate.py: Reads CAN from car and builds openpilot CarState message carcontroller.py: Builds CAN messages to send to car values.py: Limits for actuation, general constants for cars, and supported car documentation radar_interface.py: Interface for parsing radar points from the car","title":"What is a car port?"},{"location":"getting-started/what-is-openpilot/","text":"What is openpilot? openpilot is an open source driver assistance system. Currently, openpilot performs the functions of Adaptive Cruise Control (ACC), Automated Lane Centering (ALC), Forward Collision Warning (FCW), and Lane Departure Warning (LDW) for a growing variety of supported car makes, models, and model years . In addition, while openpilot is engaged, a camera-based Driver Monitoring (DM) feature alerts distracted and asleep drivers. See more about the vehicle integration and limitations . How do I use it? openpilot is designed to be used on the comma 3X. How does it work? In short, openpilot uses the car's existing APIs for the built-in ADAS system and simply provides better acceleration, braking, and steering inputs than the stock system.","title":"What is openpilot?"},{"location":"getting-started/what-is-openpilot/#what-is-openpilot","text":"openpilot is an open source driver assistance system. Currently, openpilot performs the functions of Adaptive Cruise Control (ACC), Automated Lane Centering (ALC), Forward Collision Warning (FCW), and Lane Departure Warning (LDW) for a growing variety of supported car makes, models, and model years . In addition, while openpilot is engaged, a camera-based Driver Monitoring (DM) feature alerts distracted and asleep drivers. See more about the vehicle integration and limitations .","title":"What is openpilot?"},{"location":"getting-started/what-is-openpilot/#how-do-i-use-it","text":"openpilot is designed to be used on the comma 3X.","title":"How do I use it?"},{"location":"getting-started/what-is-openpilot/#how-does-it-work","text":"In short, openpilot uses the car's existing APIs for the built-in ADAS system and simply provides better acceleration, braking, and steering inputs than the stock system.","title":"How does it work?"},{"location":"how-to/turning-the-speed-blue/","text":"This section is for how-to's on common workflows. They'll be like this blog post we wrote: https://blog.comma.ai/turning-the-speed-blue/","title":"Turn the speed blue"}]}